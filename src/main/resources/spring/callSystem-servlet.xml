<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
        http://www.springframework.org/schema/mvc 
        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.0.xsd">
	
	<!-- 直接扫描包，代替Handler 处理器   bean  -->
	<!-- 不再配置Controller的Bean了，直接配置包扫描 -->
	<context:component-scan base-package="cn.hf.manage.controller"/>
	
	<!-- 开启注解驱动，就不要配置HandlerMapping和HandlerAdapter了 -->
	<!-- 开启注解驱动：代替处理映射器HandlerMapping和处理适配器HandlerAdapter   -->
	<mvc:annotation-driven>
		<!-- register-defaults属性是  是否注册成默认  ，不想设置为默认直接改成false即可
			 spring默认有一个StringConverter,我们又定义了一个，spring容器中就有了2个字符转换器，
			 运行时究竟会使用哪一个呢？  spring有默认规则，自定义的优先-->
		<mvc:message-converters register-defaults="true">
			 <bean class="org.springframework.http.converter.StringHttpMessageConverter">
				<!--  指定构造参数   解决跨域请求的乱码问题-->
			 	<constructor-arg index="0" value="UTF-8" />
			 </bean>
		</mvc:message-converters>
	</mvc:annotation-driven>
	
	<!-- 配置视图解析器 -->
	<!--Example: prefix="/WEB-INF/jsp/", suffix=".jsp", viewname="test" -> "/WEB-INF/jsp/test.jsp" -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/"/>
		<property name="suffix" value=".jsp"/>
	</bean>

	

	<!-- 定义文件上传解析器 -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 设定默认编码 -->
		<property name="defaultEncoding" value="UTF-8"></property>
		<!-- 设定文件上传的最大值5MB，5*1024*1024 -->
		<property name="maxUploadSize" value="5242880"></property>
	</bean>
	
</beans>