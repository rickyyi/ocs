<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-4.0.xsd 
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd">
	
	 <!-- sqlSession工厂 mapper的接口配置    将sqlSessionFactory的bean交给spring来进行管理 -->
	 <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
	 	<!-- 加载数据源 -->
		<property name="dataSource" ref="dataSource" />
		<!-- 加载全局的配置文件 -->
		<property name="configLocation" value="classpath:mybatis/mybatis-config.xml"></property>
		<!-- 配置mapper的扫描，找到所有的mapper.xml映射文件。 -->
		<property name="mapperLocations" value="classpath:mybatis/mapper/**/*.xml"/>
		<!-- 配置类型别名 -->
		<property name="typeAliasesPackage" value="cn.hf.manage.pojo"/>
	</bean>
	
	<!-- 直接将mapper的代理实现交给spring来进行管理，在类中，只要属性注入即可    默认是接口名首字母小写-->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!--配置mapper接口所在路径，扫描路径下的所有的mapper接口  如果配置多个mapper的包，使用逗号进行分割-->
		<property name="basePackage" value="cn.hf.manage.mapper"/>
	</bean>
	
</beans>




